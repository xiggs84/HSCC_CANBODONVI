package vn.vnpt.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ThongTinCapNhatDuongSuAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThongTinCapNhatDuongSuAllPropertiesEquals(ThongTinCapNhatDuongSu expected, ThongTinCapNhatDuongSu actual) {
        assertThongTinCapNhatDuongSuAutoGeneratedPropertiesEquals(expected, actual);
        assertThongTinCapNhatDuongSuAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThongTinCapNhatDuongSuAllUpdatablePropertiesEquals(
        ThongTinCapNhatDuongSu expected,
        ThongTinCapNhatDuongSu actual
    ) {
        assertThongTinCapNhatDuongSuUpdatableFieldsEquals(expected, actual);
        assertThongTinCapNhatDuongSuUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThongTinCapNhatDuongSuAutoGeneratedPropertiesEquals(
        ThongTinCapNhatDuongSu expected,
        ThongTinCapNhatDuongSu actual
    ) {
        assertThat(expected)
            .as("Verify ThongTinCapNhatDuongSu auto generated properties")
            .satisfies(e -> assertThat(e.getIdCapNhat()).as("check idCapNhat").isEqualTo(actual.getIdCapNhat()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThongTinCapNhatDuongSuUpdatableFieldsEquals(ThongTinCapNhatDuongSu expected, ThongTinCapNhatDuongSu actual) {
        assertThat(expected)
            .as("Verify ThongTinCapNhatDuongSu relevant properties")
            .satisfies(e -> assertThat(e.getTenDuongSu()).as("check tenDuongSu").isEqualTo(actual.getTenDuongSu()))
            .satisfies(e -> assertThat(e.getSoGiayTo()).as("check soGiayTo").isEqualTo(actual.getSoGiayTo()))
            .satisfies(e -> assertThat(e.getThongTinDuongSu()).as("check thongTinDuongSu").isEqualTo(actual.getThongTinDuongSu()))
            .satisfies(e -> assertThat(e.getNgayCapNhat()).as("check ngayCapNhat").isEqualTo(actual.getNgayCapNhat()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThongTinCapNhatDuongSuUpdatableRelationshipsEquals(
        ThongTinCapNhatDuongSu expected,
        ThongTinCapNhatDuongSu actual
    ) {
        assertThat(expected)
            .as("Verify ThongTinCapNhatDuongSu relationships")
            .satisfies(e -> assertThat(e.getLoaiDuongSu()).as("check loaiDuongSu").isEqualTo(actual.getLoaiDuongSu()))
            .satisfies(e -> assertThat(e.getLoaiGiayTo()).as("check loaiGiayTo").isEqualTo(actual.getLoaiGiayTo()))
            .satisfies(e -> assertThat(e.getDuongSu()).as("check duongSu").isEqualTo(actual.getDuongSu()));
    }
}
