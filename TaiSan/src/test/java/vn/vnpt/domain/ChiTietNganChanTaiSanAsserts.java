package vn.vnpt.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ChiTietNganChanTaiSanAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChiTietNganChanTaiSanAllPropertiesEquals(ChiTietNganChanTaiSan expected, ChiTietNganChanTaiSan actual) {
        assertChiTietNganChanTaiSanAutoGeneratedPropertiesEquals(expected, actual);
        assertChiTietNganChanTaiSanAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChiTietNganChanTaiSanAllUpdatablePropertiesEquals(
        ChiTietNganChanTaiSan expected,
        ChiTietNganChanTaiSan actual
    ) {
        assertChiTietNganChanTaiSanUpdatableFieldsEquals(expected, actual);
        assertChiTietNganChanTaiSanUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChiTietNganChanTaiSanAutoGeneratedPropertiesEquals(
        ChiTietNganChanTaiSan expected,
        ChiTietNganChanTaiSan actual
    ) {
        assertThat(expected)
            .as("Verify ChiTietNganChanTaiSan auto generated properties")
            .satisfies(e -> assertThat(e.getIdNganChan()).as("check idNganChan").isEqualTo(actual.getIdNganChan()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChiTietNganChanTaiSanUpdatableFieldsEquals(ChiTietNganChanTaiSan expected, ChiTietNganChanTaiSan actual) {
        assertThat(expected)
            .as("Verify ChiTietNganChanTaiSan relevant properties")
            .satisfies(e -> assertThat(e.getNgayThaoTac()).as("check ngayThaoTac").isEqualTo(actual.getNgayThaoTac()))
            .satisfies(e -> assertThat(e.getSoHsCv()).as("check soHsCv").isEqualTo(actual.getSoHsCv()))
            .satisfies(e -> assertThat(e.getSoCc()).as("check soCc").isEqualTo(actual.getSoCc()))
            .satisfies(e -> assertThat(e.getSoVaoSo()).as("check soVaoSo").isEqualTo(actual.getSoVaoSo()))
            .satisfies(e -> assertThat(e.getMoTa()).as("check moTa").isEqualTo(actual.getMoTa()))
            .satisfies(e -> assertThat(e.getNgayNganChan()).as("check ngayNganChan").isEqualTo(actual.getNgayNganChan()))
            .satisfies(e -> assertThat(e.getNgayBdNganChan()).as("check ngayBdNganChan").isEqualTo(actual.getNgayBdNganChan()))
            .satisfies(e -> assertThat(e.getNgayKtNganChan()).as("check ngayKtNganChan").isEqualTo(actual.getNgayKtNganChan()))
            .satisfies(e -> assertThat(e.getTrangThai()).as("check trangThai").isEqualTo(actual.getTrangThai()))
            .satisfies(e -> assertThat(e.getNguoiThaoTac()).as("check nguoiThaoTac").isEqualTo(actual.getNguoiThaoTac()))
            .satisfies(e -> assertThat(e.getLoaiNganChan()).as("check loaiNganChan").isEqualTo(actual.getLoaiNganChan()))
            .satisfies(e -> assertThat(e.getNgayCongVan()).as("check ngayCongVan").isEqualTo(actual.getNgayCongVan()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChiTietNganChanTaiSanUpdatableRelationshipsEquals(
        ChiTietNganChanTaiSan expected,
        ChiTietNganChanTaiSan actual
    ) {
        assertThat(expected)
            .as("Verify ChiTietNganChanTaiSan relationships")
            .satisfies(e -> assertThat(e.getTaiSan()).as("check taiSan").isEqualTo(actual.getTaiSan()));
    }
}
