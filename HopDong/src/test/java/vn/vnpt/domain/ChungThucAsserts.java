package vn.vnpt.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ChungThucAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChungThucAllPropertiesEquals(ChungThuc expected, ChungThuc actual) {
        assertChungThucAutoGeneratedPropertiesEquals(expected, actual);
        assertChungThucAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChungThucAllUpdatablePropertiesEquals(ChungThuc expected, ChungThuc actual) {
        assertChungThucUpdatableFieldsEquals(expected, actual);
        assertChungThucUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChungThucAutoGeneratedPropertiesEquals(ChungThuc expected, ChungThuc actual) {
        assertThat(expected)
            .as("Verify ChungThuc auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChungThucUpdatableFieldsEquals(ChungThuc expected, ChungThuc actual) {
        assertThat(expected)
            .as("Verify ChungThuc relevant properties")
            .satisfies(e -> assertThat(e.getIdDonVi()).as("check idDonVi").isEqualTo(actual.getIdDonVi()))
            .satisfies(e -> assertThat(e.getNguoiYeuCau()).as("check nguoiYeuCau").isEqualTo(actual.getNguoiYeuCau()))
            .satisfies(e -> assertThat(e.getNguoiChungThuc()).as("check nguoiChungThuc").isEqualTo(actual.getNguoiChungThuc()))
            .satisfies(e -> assertThat(e.getNguoiThaoTac()).as("check nguoiThaoTac").isEqualTo(actual.getNguoiThaoTac()))
            .satisfies(e -> assertThat(e.getNgayChungThuc()).as("check ngayChungThuc").isEqualTo(actual.getNgayChungThuc()))
            .satisfies(e -> assertThat(e.getNgayThaoTac()).as("check ngayThaoTac").isEqualTo(actual.getNgayThaoTac()))
            .satisfies(e -> assertThat(e.getSoTienThu()).as("check soTienThu").isEqualTo(actual.getSoTienThu()))
            .satisfies(e -> assertThat(e.getSoBanSao()).as("check soBanSao").isEqualTo(actual.getSoBanSao()))
            .satisfies(e -> assertThat(e.getVanBan()).as("check vanBan").isEqualTo(actual.getVanBan()))
            .satisfies(e -> assertThat(e.getTrangThai()).as("check trangThai").isEqualTo(actual.getTrangThai()))
            .satisfies(e -> assertThat(e.getQuyenSo()).as("check quyenSo").isEqualTo(actual.getQuyenSo()))
            .satisfies(e -> assertThat(e.getDuongSu()).as("check duongSu").isEqualTo(actual.getDuongSu()))
            .satisfies(e -> assertThat(e.getTaiSan()).as("check taiSan").isEqualTo(actual.getTaiSan()))
            .satisfies(e -> assertThat(e.getStrSearch()).as("check strSearch").isEqualTo(actual.getStrSearch()))
            .satisfies(e -> assertThat(e.getSrcChungThuc()).as("check srcChungThuc").isEqualTo(actual.getSrcChungThuc()))
            .satisfies(e -> assertThat(e.getThongTinChungThuc()).as("check thongTinChungThuc").isEqualTo(actual.getThongTinChungThuc()))
            .satisfies(e -> assertThat(e.getChuKyNgoaiTruSo()).as("check chuKyNgoaiTruSo").isEqualTo(actual.getChuKyNgoaiTruSo()))
            .satisfies(e -> assertThat(e.getIdCtGoc()).as("check idCtGoc").isEqualTo(actual.getIdCtGoc()))
            .satisfies(e -> assertThat(e.getNgayText()).as("check ngayText").isEqualTo(actual.getNgayText()))
            .satisfies(e -> assertThat(e.getChucDanhCanBo()).as("check chucDanhCanBo").isEqualTo(actual.getChucDanhCanBo()))
            .satisfies(e -> assertThat(e.getLdPheDuyet()).as("check ldPheDuyet").isEqualTo(actual.getLdPheDuyet()))
            .satisfies(e -> assertThat(e.getChucDanhLd()).as("check chucDanhLd").isEqualTo(actual.getChucDanhLd()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChungThucUpdatableRelationshipsEquals(ChungThuc expected, ChungThuc actual) {
        assertThat(expected)
            .as("Verify ChungThuc relationships")
            .satisfies(e ->
                assertThat(e.getDanhMucLoaiGiayToChungThuc())
                    .as("check danhMucLoaiGiayToChungThuc")
                    .isEqualTo(actual.getDanhMucLoaiGiayToChungThuc())
            );
    }
}
