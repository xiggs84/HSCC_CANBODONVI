package vn.vnpt.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SoCongChungTempAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoCongChungTempAllPropertiesEquals(SoCongChungTemp expected, SoCongChungTemp actual) {
        assertSoCongChungTempAutoGeneratedPropertiesEquals(expected, actual);
        assertSoCongChungTempAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoCongChungTempAllUpdatablePropertiesEquals(SoCongChungTemp expected, SoCongChungTemp actual) {
        assertSoCongChungTempUpdatableFieldsEquals(expected, actual);
        assertSoCongChungTempUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoCongChungTempAutoGeneratedPropertiesEquals(SoCongChungTemp expected, SoCongChungTemp actual) {
        assertThat(expected)
            .as("Verify SoCongChungTemp auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoCongChungTempUpdatableFieldsEquals(SoCongChungTemp expected, SoCongChungTemp actual) {
        assertThat(expected)
            .as("Verify SoCongChungTemp relevant properties")
            .satisfies(e -> assertThat(e.getIdHopDong()).as("check idHopDong").isEqualTo(actual.getIdHopDong()))
            .satisfies(e -> assertThat(e.getIdMaster()).as("check idMaster").isEqualTo(actual.getIdMaster()))
            .satisfies(e -> assertThat(e.getSoCc()).as("check soCc").isEqualTo(actual.getSoCc()))
            .satisfies(e -> assertThat(e.getNgayThaoTac()).as("check ngayThaoTac").isEqualTo(actual.getNgayThaoTac()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoCongChungTempUpdatableRelationshipsEquals(SoCongChungTemp expected, SoCongChungTemp actual) {
        // empty method
    }
}
